name: Docker

on:
  push:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: Build Docker
    runs-on: ubuntu-latest

    steps:
      - name: Install Build Tools
        run: |
          sudo apt update
          sudo apt -y install nodejs npm git
          node --version

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.email "github@noreply.fend.digital"
          git config user.name "Github Action"

      - name: Develop
        run: |
          npm version --no-git-tag-version --preid beta prerelease
          git commit -m "update version" package.json
        if: github.ref_name == 'develop'

      - name: Main-Version
        run: |
          npm version --no-git-tag-version minor
          git commit -m "update version" package.json
        if: github.ref_name == 'main'

      - name: Get Version
        id: getVersion
        run: echo "version=$(npm pkg get version | sed 's/"//g')" >> $GITHUB_OUTPUT

      - run: echo "${{ github.ref_name }}"
      - run: echo "${{ steps.getVersion.outputs.version }}"
      - run: npm pkg get version | sed 's/"//g'

      - run: git push origin
      - run: git push origin --tags

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.getVersion.outputs.version }}
          release_name: Release ${{ steps.getVersion.outputs.version }}
          body: false
          draft: false
          prerelease: false
        if: github.ref_name == 'main'

      - name: Install NPM-Packages
        run: |
          npm install
          ls -lah

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/main') }}
            type=raw,value=${{ github.event.inputs.refComponents }},enable=${{ github.event.inputs.refComponents != github.ref_name }}
            type=raw,value=${{ steps.getVersion.outputs.version }},enable=true            

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max